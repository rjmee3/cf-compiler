<program> ::= { <top_level_declaration> }

<top_level_declaration> ::= <function_declaration> | <type_declaration>

<function_declaration> ::= "fn" <identifier> "(" <parameter_list> ")" ":" <type> "{" <expression> "}"

<identifier> ::= <letter> { <letter> | <digit> | "_" }*

<letter> ::= <uppercase_letter> | <lowercase_letter>

<uppercase_letter> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<lowercase_letter> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<parameter_list> ::= [ <parameter> { "," <parameter> } ]

<parameter> ::= <identifier> ":" <type>

<type> ::= void
         | char
         | short
         | int
         | long
         | float
         | double
         | signed
         | unsigned

<expression> ::= <literal>
               | <identifier>
               | "let" <parameter> "=" <expression> "in" <expression>
               | <if_expression>
               | <lambda_expression>
               | <application>
               | "(" <expression> ")"

<literal> ::= <int_literal> | <float_literal> | <bool_literal> | <string_literal>

<int_literal> ::= <digit> { <digit> }*

<float_literal> ::= <int_literal> "." <int_literal>

<bool_literal> ::= "true" | "false"

<string_literal> ::= "\"" { any_char_except_quote } "\""

<if_expression> ::= "if" <expression> "then" <expression> "else" <expression>

<lambda_expression> ::= "fn" "(" <parameter_list> ")" "->" <expression>

<application> ::= <expression> <expression>
